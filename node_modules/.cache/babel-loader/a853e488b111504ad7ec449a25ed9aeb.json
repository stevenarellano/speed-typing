{"ast":null,"code":"import _slicedToArray from\"/Users/stevenarellanojr/Desktop/stuff/cs/WebDev/speed-typing/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import\"./TypingArea.css\";// variables\nimport{charBank}from\"../assets/charBank\";import{useState,useEffect,useLayoutEffect}from\"react\";import{TypingInfo,Timer,includesBadKey,returnNewTypingInfo}from\"../assets/typing\";import{NUM_WQRDS}from\"../assets/typing\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function TypingArea(_ref){var lessonState=_ref.lessonState,typingInfoState=_ref.typingInfoState,restartState=_ref.restartState;// imported states\nvar _lessonState=_slicedToArray(lessonState,2),lessonNum=_lessonState[0],setLessonNum=_lessonState[1];var _typingInfoState=_slicedToArray(typingInfoState,2),typingInfo=_typingInfoState[0],setTypingInfo=_typingInfoState[1];var _restartState=_slicedToArray(restartState,2),restartToggle=_restartState[0],setRestartToggle=_restartState[1];//  ending control\nvar _useState=useState(false),_useState2=_slicedToArray(_useState,2),finished=_useState2[0],setFinished=_useState2[1];function triggerEnd(){setFinished(true);}var typingBody=finished?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"title\",children:\" STATS\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"stats\",children:[\"Time Elapsed: \",typingInfo.timer.timeElapsed,\"s\",/*#__PURE__*/_jsx(\"br\",{}),\"MISTAKES MADE: \",typingInfo.mistakes,/*#__PURE__*/_jsx(\"br\",{}),\"WPM:\",\" \",Math.round(NUM_WQRDS/(typingInfo.timer.timeElapsed/60)),/*#__PURE__*/_jsx(\"br\",{}),\"ACCURACY:\",\" \",Math.round(Math.max((typingInfo.typed.length-typingInfo.mistakes)/typingInfo.typed.length,0.01)*100),\"%\"]})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"title\",children:\" Please Type The Letters Below\"}),/*#__PURE__*/_jsxs(\"div\",{id:\"typing-container\",className:\"\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"typed typing-content\",children:typingInfo.typed}),/*#__PURE__*/_jsx(\"div\",{className:\"toType  typing-content\",children:typingInfo.toType})]})]});// restarting the texting\nfunction restartTyping(){setRestartToggle(!restartToggle);setFinished(0);}function _keyDownE(e){console.log(\"hi\");}// Add event listeners\nuseLayoutEffect(function(){_keyDownE=function keyDownE(e){if(includesBadKey(e)){return;}typingInfo.registerKeydown(e);console.log(typingInfo);// create brand new class\nvar newTypingInfo=returnNewTypingInfo(typingInfo);setTypingInfo(newTypingInfo);if(typingInfo.toType.length===0){window.removeEventListener(\"keydown\",_keyDownE);triggerEnd();}};window.addEventListener(\"keydown\",_keyDownE);// Remove event listeners on cleanup\nreturn function(){window.removeEventListener(\"keydown\",_keyDownE);};},[lessonNum,typingInfo]);// Empty array ensures that effect is only run on mount and unmount\nuseLayoutEffect(function(){setFinished(0);},[lessonNum]);return/*#__PURE__*/_jsxs(\"div\",{id:\"lesson-area\",children:[typingBody,/*#__PURE__*/_jsx(\"div\",{onClick:restartTyping,className:\"bottom-button\",children:\"RESTART\"})]});}","map":{"version":3,"sources":["/Users/stevenarellanojr/Desktop/stuff/cs/WebDev/speed-typing/src/components/TypingArea.js"],"names":["charBank","useState","useEffect","useLayoutEffect","TypingInfo","Timer","includesBadKey","returnNewTypingInfo","NUM_WQRDS","TypingArea","lessonState","typingInfoState","restartState","lessonNum","setLessonNum","typingInfo","setTypingInfo","restartToggle","setRestartToggle","finished","setFinished","triggerEnd","typingBody","timer","timeElapsed","mistakes","Math","round","max","typed","length","toType","restartTyping","keyDownE","e","console","log","registerKeydown","newTypingInfo","window","removeEventListener","addEventListener"],"mappings":"kJAAA,MAAO,kBAAP,CAEA;AACA,OAASA,QAAT,KAAyB,oBAAzB,CACA,OAASC,QAAT,CAAmBC,SAAnB,CAA8BC,eAA9B,KAAqD,OAArD,CACA,OACIC,UADJ,CAEIC,KAFJ,CAGIC,cAHJ,CAIIC,mBAJJ,KAKO,kBALP,CAMA,OAASC,SAAT,KAA0B,kBAA1B,C,6IAEA,cAAe,SAASC,CAAAA,UAAT,MAIZ,IAHCC,CAAAA,WAGD,MAHCA,WAGD,CAFCC,eAED,MAFCA,eAED,CADCC,YACD,MADCA,YACD,CACC;AACA,gCAAgCF,WAAhC,IAAKG,SAAL,iBAAgBC,YAAhB,iBACA,oCAAkCH,eAAlC,IAAKI,UAAL,qBAAiBC,aAAjB,qBACA,iCAAwCJ,YAAxC,IAAKK,aAAL,kBAAoBC,gBAApB,kBAEA;AACA,cAA8BjB,QAAQ,CAAC,KAAD,CAAtC,wCAAKkB,QAAL,eAAeC,WAAf,eACA,QAASC,CAAAA,UAAT,EAAsB,CAClBD,WAAW,CAAC,IAAD,CAAX,CACH,CACD,GAAIE,CAAAA,UAAU,CAAGH,QAAQ,cACrB,wCACI,YAAK,SAAS,CAAC,OAAf,oBADJ,cAEI,aAAK,SAAS,CAAC,OAAf,4BACmBJ,UAAU,CAACQ,KAAX,CAAiBC,WADpC,kBACiD,aADjD,mBAEoBT,UAAU,CAACU,QAF/B,cAGI,aAHJ,QAIS,GAJT,CAKKC,IAAI,CAACC,KAAL,CAAWnB,SAAS,EAAIO,UAAU,CAACQ,KAAX,CAAiBC,WAAjB,CAA+B,EAAnC,CAApB,CALL,cAMI,aANJ,aAOc,GAPd,CAQKE,IAAI,CAACC,KAAL,CACGD,IAAI,CAACE,GAAL,CACI,CAACb,UAAU,CAACc,KAAX,CAAiBC,MAAjB,CAA0Bf,UAAU,CAACU,QAAtC,EACIV,UAAU,CAACc,KAAX,CAAiBC,MAFzB,CAGI,IAHJ,EAII,GALP,CARL,OAFJ,GADqB,cAsBrB,wCACI,YAAK,SAAS,CAAC,OAAf,4CADJ,cAEI,aAAK,EAAE,CAAC,kBAAR,CAA2B,SAAS,CAAC,EAArC,wBACI,YAAK,SAAS,CAAC,sBAAf,UAAuCf,UAAU,CAACc,KAAlD,EADJ,cAEI,YAAK,SAAS,CAAC,wBAAf,UACKd,UAAU,CAACgB,MADhB,EAFJ,GAFJ,GAtBJ,CAiCA;AACA,QAASC,CAAAA,aAAT,EAAyB,CACrBd,gBAAgB,CAAC,CAACD,aAAF,CAAhB,CACAG,WAAW,CAAC,CAAD,CAAX,CACH,CAED,QAASa,CAAAA,SAAT,CAAkBC,CAAlB,CAAqB,CACjBC,OAAO,CAACC,GAAR,CAAY,IAAZ,EACH,CAED;AACAjC,eAAe,CAAC,UAAM,CAClB8B,SAAQ,CAAG,kBAAUC,CAAV,CAAa,CACpB,GAAI5B,cAAc,CAAC4B,CAAD,CAAlB,CAAuB,CACnB,OACH,CACDnB,UAAU,CAACsB,eAAX,CAA2BH,CAA3B,EAEAC,OAAO,CAACC,GAAR,CAAYrB,UAAZ,EACA;AACA,GAAIuB,CAAAA,aAAa,CAAG/B,mBAAmB,CAACQ,UAAD,CAAvC,CACAC,aAAa,CAACsB,aAAD,CAAb,CACA,GAAIvB,UAAU,CAACgB,MAAX,CAAkBD,MAAlB,GAA6B,CAAjC,CAAoC,CAChCS,MAAM,CAACC,mBAAP,CAA2B,SAA3B,CAAsCP,SAAtC,EACAZ,UAAU,GACb,CACJ,CAdD,CAeAkB,MAAM,CAACE,gBAAP,CAAwB,SAAxB,CAAmCR,SAAnC,EAEA;AACA,MAAO,WAAM,CACTM,MAAM,CAACC,mBAAP,CAA2B,SAA3B,CAAsCP,SAAtC,EACH,CAFD,CAGH,CAtBc,CAsBZ,CAACpB,SAAD,CAAYE,UAAZ,CAtBY,CAAf,CAsB6B;AAE7BZ,eAAe,CAAC,UAAM,CAClBiB,WAAW,CAAC,CAAD,CAAX,CACH,CAFc,CAEZ,CAACP,SAAD,CAFY,CAAf,CAGA,mBACI,aAAK,EAAE,CAAC,aAAR,WACKS,UADL,cAEI,YAAK,OAAO,CAAEU,aAAd,CAA6B,SAAS,CAAC,eAAvC,qBAFJ,GADJ,CAQH","sourcesContent":["import \"./TypingArea.css\";\n\n// variables\nimport { charBank } from \"../assets/charBank\";\nimport { useState, useEffect, useLayoutEffect } from \"react\";\nimport {\n    TypingInfo,\n    Timer,\n    includesBadKey,\n    returnNewTypingInfo,\n} from \"../assets/typing\";\nimport { NUM_WQRDS } from \"../assets/typing\";\n\nexport default function TypingArea({\n    lessonState,\n    typingInfoState,\n    restartState,\n}) {\n    // imported states\n    let [lessonNum, setLessonNum] = lessonState;\n    let [typingInfo, setTypingInfo] = typingInfoState;\n    let [restartToggle, setRestartToggle] = restartState;\n\n    //  ending control\n    let [finished, setFinished] = useState(false);\n    function triggerEnd() {\n        setFinished(true);\n    }\n    let typingBody = finished ? (\n        <>\n            <div className=\"title\"> STATS</div>\n            <div className=\"stats\">\n                Time Elapsed: {typingInfo.timer.timeElapsed}s<br />\n                MISTAKES MADE: {typingInfo.mistakes}\n                <br />\n                WPM:{\" \"}\n                {Math.round(NUM_WQRDS / (typingInfo.timer.timeElapsed / 60))}\n                <br />\n                ACCURACY:{\" \"}\n                {Math.round(\n                    Math.max(\n                        (typingInfo.typed.length - typingInfo.mistakes) /\n                            typingInfo.typed.length,\n                        0.01\n                    ) * 100\n                )}\n                %\n            </div>\n        </>\n    ) : (\n        <>\n            <div className=\"title\"> Please Type The Letters Below</div>\n            <div id=\"typing-container\" className=\"\">\n                <div className=\"typed typing-content\">{typingInfo.typed}</div>\n                <div className=\"toType  typing-content\">\n                    {typingInfo.toType}\n                </div>\n            </div>\n        </>\n    );\n\n    // restarting the texting\n    function restartTyping() {\n        setRestartToggle(!restartToggle);\n        setFinished(0);\n    }\n\n    function keyDownE(e) {\n        console.log(\"hi\");\n    }\n\n    // Add event listeners\n    useLayoutEffect(() => {\n        keyDownE = function (e) {\n            if (includesBadKey(e)) {\n                return;\n            }\n            typingInfo.registerKeydown(e);\n\n            console.log(typingInfo);\n            // create brand new class\n            let newTypingInfo = returnNewTypingInfo(typingInfo);\n            setTypingInfo(newTypingInfo);\n            if (typingInfo.toType.length === 0) {\n                window.removeEventListener(\"keydown\", keyDownE);\n                triggerEnd();\n            }\n        };\n        window.addEventListener(\"keydown\", keyDownE);\n\n        // Remove event listeners on cleanup\n        return () => {\n            window.removeEventListener(\"keydown\", keyDownE);\n        };\n    }, [lessonNum, typingInfo]); // Empty array ensures that effect is only run on mount and unmount\n\n    useLayoutEffect(() => {\n        setFinished(0);\n    }, [lessonNum]);\n    return (\n        <div id=\"lesson-area\">\n            {typingBody}\n            <div onClick={restartTyping} className=\"bottom-button\">\n                RESTART\n            </div>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}