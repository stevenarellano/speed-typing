{"ast":null,"code":"class TypingInfo {\n  constructor(toType, timer) {\n    this.typed = \"\";\n    this.toType = toType;\n    this.timer = timer;\n  }\n\n}\n\nclass Timer {\n  constructor() {\n    this.startTime = 0;\n    this.endTime = 0;\n    this.timeElapsed = 0;\n  }\n\n  startTimer() {\n    this.startTime = new Date();\n  }\n\n  endTimer() {\n    newStopwatch.endTime = new Date();\n    newStopwatch.timeElapsed = secondsElapsed(newStopwatch.startTime, newStopwatch.endTime);\n  }\n\n}\n\nfunction secondsElapsed(time1, time2) {\n  return Math.abs(time1 - time2) / 1000;\n}\n\nconst noInputKeys = [\"Shift\", \"ArrowDown\", \"ArrowUp\", \"ArrowLeft\", \"ArrowRight\", \"Control\", \"Alt\", \"Meta\", \"Escape\", \"CapsLock\", \"Backspace\"];\nexport function includesBadKey(e) {\n  if (noInputKeys.includes(e.key)) {\n    return true;\n  }\n\n  return false;\n}\nexport function timerKeydown(e, stopwatch) {\n  let newStopwatch = stopwatch;\n\n  if (stopwatch.startTime === 0) {} else if (stopwatch.startTime !== 0 && stopwatch.endTime === 0) {}\n\n  console.log(newStopwatch);\n  return newStopwatch;\n}\nexport function registerKeydown(e, toType) {\n  console.log(toType);\n\n  if (e.key === toType[0]) {\n    return toType.shift();\n  } else {\n    return toType;\n  }\n}","map":{"version":3,"sources":["/Users/stevenarellanojr/Desktop/stuff/cs/WebDev/speed-typing/speed-typing/src/assets/typing.js"],"names":["TypingInfo","constructor","toType","timer","typed","Timer","startTime","endTime","timeElapsed","startTimer","Date","endTimer","newStopwatch","secondsElapsed","time1","time2","Math","abs","noInputKeys","includesBadKey","e","includes","key","timerKeydown","stopwatch","console","log","registerKeydown","shift"],"mappings":"AAAA,MAAMA,UAAN,CAAiB;AACbC,EAAAA,WAAW,CAACC,MAAD,EAASC,KAAT,EAAgB;AACvB,SAAKC,KAAL,GAAa,EAAb;AACA,SAAKF,MAAL,GAAcA,MAAd;AACA,SAAKC,KAAL,GAAaA,KAAb;AACH;;AALY;;AAQjB,MAAME,KAAN,CAAY;AACRJ,EAAAA,WAAW,GAAG;AACV,SAAKK,SAAL,GAAiB,CAAjB;AACA,SAAKC,OAAL,GAAe,CAAf;AACA,SAAKC,WAAL,GAAmB,CAAnB;AACH;;AAEDC,EAAAA,UAAU,GAAG;AACT,SAAKH,SAAL,GAAiB,IAAII,IAAJ,EAAjB;AACH;;AAEDC,EAAAA,QAAQ,GAAG;AACPC,IAAAA,YAAY,CAACL,OAAb,GAAuB,IAAIG,IAAJ,EAAvB;AACAE,IAAAA,YAAY,CAACJ,WAAb,GAA2BK,cAAc,CACrCD,YAAY,CAACN,SADwB,EAErCM,YAAY,CAACL,OAFwB,CAAzC;AAIH;;AAjBO;;AAqBZ,SAASM,cAAT,CAAwBC,KAAxB,EAA+BC,KAA/B,EAAsC;AAClC,SAAOC,IAAI,CAACC,GAAL,CAASH,KAAK,GAAGC,KAAjB,IAA0B,IAAjC;AACH;;AAED,MAAMG,WAAW,GAAG,CAChB,OADgB,EAEhB,WAFgB,EAGhB,SAHgB,EAIhB,WAJgB,EAKhB,YALgB,EAMhB,SANgB,EAOhB,KAPgB,EAQhB,MARgB,EAShB,QATgB,EAUhB,UAVgB,EAWhB,WAXgB,CAApB;AAcA,OAAO,SAASC,cAAT,CAAwBC,CAAxB,EAA2B;AAC9B,MAAIF,WAAW,CAACG,QAAZ,CAAqBD,CAAC,CAACE,GAAvB,CAAJ,EAAiC;AAC7B,WAAO,IAAP;AACH;;AACD,SAAO,KAAP;AACH;AACD,OAAO,SAASC,YAAT,CAAsBH,CAAtB,EAAyBI,SAAzB,EAAoC;AACvC,MAAIZ,YAAY,GAAGY,SAAnB;;AACA,MAAIA,SAAS,CAAClB,SAAV,KAAwB,CAA5B,EAA+B,CAC9B,CADD,MACO,IAAIkB,SAAS,CAAClB,SAAV,KAAwB,CAAxB,IAA6BkB,SAAS,CAACjB,OAAV,KAAsB,CAAvD,EAA0D,CAEhE;;AACDkB,EAAAA,OAAO,CAACC,GAAR,CAAYd,YAAZ;AACA,SAAOA,YAAP;AACH;AAED,OAAO,SAASe,eAAT,CAAyBP,CAAzB,EAA4BlB,MAA5B,EAAoC;AACvCuB,EAAAA,OAAO,CAACC,GAAR,CAAYxB,MAAZ;;AACA,MAAIkB,CAAC,CAACE,GAAF,KAAUpB,MAAM,CAAC,CAAD,CAApB,EAAyB;AACrB,WAAOA,MAAM,CAAC0B,KAAP,EAAP;AACH,GAFD,MAEO;AACH,WAAO1B,MAAP;AACH;AACJ","sourcesContent":["class TypingInfo {\n    constructor(toType, timer) {\n        this.typed = \"\";\n        this.toType = toType;\n        this.timer = timer;\n    }\n}\n\nclass Timer {\n    constructor() {\n        this.startTime = 0;\n        this.endTime = 0;\n        this.timeElapsed = 0;\n    }\n\n    startTimer() {\n        this.startTime = new Date();\n    }\n\n    endTimer() {\n        newStopwatch.endTime = new Date();\n        newStopwatch.timeElapsed = secondsElapsed(\n            newStopwatch.startTime,\n            newStopwatch.endTime\n        );\n    }\n\n}\n\nfunction secondsElapsed(time1, time2) {\n    return Math.abs(time1 - time2) / 1000;\n}\n\nconst noInputKeys = [\n    \"Shift\",\n    \"ArrowDown\",\n    \"ArrowUp\",\n    \"ArrowLeft\",\n    \"ArrowRight\",\n    \"Control\",\n    \"Alt\",\n    \"Meta\",\n    \"Escape\",\n    \"CapsLock\",\n    \"Backspace\",\n];\n\nexport function includesBadKey(e) {\n    if (noInputKeys.includes(e.key)) {\n        return true;\n    }\n    return false;\n}\nexport function timerKeydown(e, stopwatch) {\n    let newStopwatch = stopwatch;\n    if (stopwatch.startTime === 0) {\n    } else if (stopwatch.startTime !== 0 && stopwatch.endTime === 0) {\n\n    }\n    console.log(newStopwatch);\n    return newStopwatch;\n}\n\nexport function registerKeydown(e, toType) {\n    console.log(toType);\n    if (e.key === toType[0]) {\n        return toType.shift();\n    } else {\n        return toType;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}