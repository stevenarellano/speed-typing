{"ast":null,"code":"import _classCallCheck from\"/Users/stevenarellanojr/Desktop/stuff/cs/WebDev/speed-typing/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/stevenarellanojr/Desktop/stuff/cs/WebDev/speed-typing/node_modules/@babel/runtime/helpers/esm/createClass.js\";// constants\nexport var NUM_WQRDS=40;// creating the text area\nfunction rmStringDuplicates(str){return Array.from(new Set(str)).join(\"\");}function randomInt(min,max){return Math.floor(Math.random()*(max-min+1))+min;}export function cText(chars,numWords){var lst=[];var i,j,text;for(j=0;j<numWords;j++){text=\"\";for(i=0;i<randomInt(3,5);i++){var first=!text.length;var upperCase=Math.random()>0.80&&first?1:0;var newChar=chars.charAt(Math.floor(Math.random()*chars.length));text+=upperCase?newChar.toUpperCase():newChar;}lst.push(text);}return lst.join(\" \");}var TypingInfo=/*#__PURE__*/function(){function TypingInfo(toType,timer){_classCallCheck(this,TypingInfo);this.toType=toType;this.timer=timer;this.typed=\"\";this.mistakes=0;this.currentWrong=false;}_createClass(TypingInfo,[{key:\"_getNextToType\",value:function _getNextToType(){var nextToType;if(this.toType.length>0){nextToType=this.toType.substring(1);}else{nextToType=\"\";}this.toType=nextToType;return nextToType;}},{key:\"_timerControl\",value:function _timerControl(toType){if(this.typed.length==0){this.timer.startTimer();}else if(toType.length==0){this.timer.endTimer();}}},{key:\"_addWrongClass\",value:function _addWrongClass(){var typingAreaClasses=document.getElementById(\"typing-container\").classList;if(!typingAreaClasses.contains(\"wrong-keydown\")){typingAreaClasses.add(\"wrong-keydown\");console.log(typingAreaClasses);}}},{key:\"removeWrongClass\",value:function removeWrongClass(){var typingAreaClasses=document.getElementById(\"typing-container\").classList;if(typingAreaClasses.contains(\"wrong-keydown\")){typingAreaClasses.remove(\"wrong-keydown\");}}},{key:\"registerKeydown\",value:function registerKeydown(e){var firstChar=this.toType.charAt(0);if(e.key===firstChar){if(this.currentWrong){this.currentWrong=false;this.removeWrongClass();}var nextToType=this._getNextToType();this._timerControl(nextToType);this.typed=this.typed+firstChar;}else{this.mistakes++;this.currentWrong=true;this._addWrongClass();}}}]);return TypingInfo;}();export function returnNewTypingInfo(oldTypingInfo){var newTypingInfo=new TypingInfo(oldTypingInfo.toType,new Timer());newTypingInfo.typed=oldTypingInfo.typed;newTypingInfo.mistakes=oldTypingInfo.mistakes;newTypingInfo.currentWrong=oldTypingInfo.currentWrong;newTypingInfo.timer=oldTypingInfo.timer;return newTypingInfo;}var Timer=/*#__PURE__*/function(){function Timer(){_classCallCheck(this,Timer);this.startTime=0;this.endTime=0;this.timeElapsed=0;}_createClass(Timer,[{key:\"startTimer\",value:function startTimer(){this.startTime=new Date();}},{key:\"_secondsElapsed\",value:function _secondsElapsed(time1,time2){return Math.abs(time1-time2)/1000;}},{key:\"endTimer\",value:function endTimer(){this.endTime=new Date();this.timeElapsed=this._secondsElapsed(this.startTime,this.endTime);}}]);return Timer;}();var noInputKeys=[\"Shift\",\"ArrowDown\",\"ArrowUp\",\"ArrowLeft\",\"ArrowRight\",\"Control\",\"Alt\",\"Meta\",\"Escape\",\"CapsLock\",\"Backspace\"];function includesBadKey(e){if(noInputKeys.includes(e.key)){return true;}return false;}export{TypingInfo,Timer,includesBadKey};","map":{"version":3,"sources":["/Users/stevenarellanojr/Desktop/stuff/cs/WebDev/speed-typing/src/assets/typing.js"],"names":["NUM_WQRDS","rmStringDuplicates","str","Array","from","Set","join","randomInt","min","max","Math","floor","random","cText","chars","numWords","lst","i","j","text","first","length","upperCase","newChar","charAt","toUpperCase","push","TypingInfo","toType","timer","typed","mistakes","currentWrong","nextToType","substring","startTimer","endTimer","typingAreaClasses","document","getElementById","classList","contains","add","console","log","remove","e","firstChar","key","removeWrongClass","_getNextToType","_timerControl","_addWrongClass","returnNewTypingInfo","oldTypingInfo","newTypingInfo","Timer","startTime","endTime","timeElapsed","Date","time1","time2","abs","_secondsElapsed","noInputKeys","includesBadKey","includes"],"mappings":"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","sourcesContent":["// constants\nexport const NUM_WQRDS = 40;\n// creating the text area\nfunction rmStringDuplicates(str) {\n    return Array.from(new Set(str)).join(\"\");\n}\n\nfunction randomInt(min, max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport function cText(chars, numWords) {\n    let lst = [];\n    let i, j, text;\n    for (j = 0; j < numWords; j++) {\n        text = \"\";\n        for (i = 0; i < randomInt(3, 5); i++) {\n            let first = !text.length;\n            let upperCase = (Math.random() > 0.80 && first) ? 1 : 0;\n            let newChar = chars.charAt(\n                Math.floor(Math.random() * chars.length)\n            );\n\n            text += upperCase ? newChar.toUpperCase() : newChar;\n        }\n        lst.push(text);\n    }\n\n    return lst.join(\" \");\n}\nclass TypingInfo {\n    constructor(toType, timer) {\n        this.toType = toType;\n        this.timer = timer;\n        this.typed = \"\";\n        this.mistakes = 0;\n        this.currentWrong = false;\n    }\n\n    _getNextToType() {\n        let nextToType;\n        if (this.toType.length > 0) {\n            nextToType = this.toType.substring(1);\n        } else {\n            nextToType = \"\";\n        }\n        this.toType = nextToType;\n        return nextToType;\n    }\n\n    _timerControl(toType) {\n        if (this.typed.length == 0) {\n            this.timer.startTimer();\n        } else if (toType.length == 0) {\n            this.timer.endTimer();\n        }\n    }\n\n    _addWrongClass() {\n        let typingAreaClasses =\n            document.getElementById(\"typing-container\").classList;\n        if (!typingAreaClasses.contains(\"wrong-keydown\")) {\n            typingAreaClasses.add(\"wrong-keydown\");\n            console.log(typingAreaClasses);\n        }\n    }\n\n    removeWrongClass() {\n        let typingAreaClasses =\n            document.getElementById(\"typing-container\").classList;\n        if (typingAreaClasses.contains(\"wrong-keydown\")) {\n            typingAreaClasses.remove(\"wrong-keydown\");\n        }\n    }\n\n    registerKeydown(e) {\n        let firstChar = this.toType.charAt(0);\n        if (e.key === firstChar) {\n            if (this.currentWrong) {\n                this.currentWrong = false;\n                this.removeWrongClass();\n            }\n            let nextToType = this._getNextToType();\n            this._timerControl(nextToType);\n\n            this.typed = this.typed + firstChar;\n        } else {\n            this.mistakes++;\n            this.currentWrong = true;\n            this._addWrongClass();\n        }\n    }\n}\n\nexport function returnNewTypingInfo(oldTypingInfo) {\n    let newTypingInfo = new TypingInfo(oldTypingInfo.toType, new Timer());\n    newTypingInfo.typed = oldTypingInfo.typed;\n    newTypingInfo.mistakes = oldTypingInfo.mistakes;\n    newTypingInfo.currentWrong = oldTypingInfo.currentWrong;\n    newTypingInfo.timer = oldTypingInfo.timer;\n    return newTypingInfo;\n}\n\nclass Timer {\n    constructor() {\n        this.startTime = 0;\n        this.endTime = 0;\n        this.timeElapsed = 0;\n    }\n\n    startTimer() {\n        this.startTime = new Date();\n    }\n\n    _secondsElapsed(time1, time2) {\n        return Math.abs(time1 - time2) / 1000;\n    }\n\n    endTimer() {\n        this.endTime = new Date();\n        this.timeElapsed = this._secondsElapsed(this.startTime, this.endTime);\n    }\n}\n\nconst noInputKeys = [\n    \"Shift\",\n    \"ArrowDown\",\n    \"ArrowUp\",\n    \"ArrowLeft\",\n    \"ArrowRight\",\n    \"Control\",\n    \"Alt\",\n    \"Meta\",\n    \"Escape\",\n    \"CapsLock\",\n    \"Backspace\",\n];\n\nfunction includesBadKey(e) {\n    if (noInputKeys.includes(e.key)) {\n        return true;\n    }\n    return false;\n}\n\nexport { TypingInfo, Timer, includesBadKey };\n"]},"metadata":{},"sourceType":"module"}