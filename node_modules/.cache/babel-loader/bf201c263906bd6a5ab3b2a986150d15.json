{"ast":null,"code":"var _jsxFileName = \"/Users/stevenarellanojr/Desktop/stuff/cs/WebDev/speed-typing/speed-typing/src/components/Options.js\";\nimport \"./Options.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Options(_ref) {\n  let {\n    lessonState,\n    testToggleState\n  } = _ref;\n  // imported states\n  let [currentLessonNum, setLessonNum] = lessonState;\n  let [testToggle, setTestToggle] = testToggleState;\n\n  function generateLesson(e) {\n    let newLessonNum = e.target.id.split(\"n\")[1];\n\n    if (newLessonNum == currentLessonNum) {\n      return;\n    }\n\n    setLessonNum(newLessonNum);\n  }\n\n  function buildLessonList(numOfLessons) {\n    let lessonList = [...Array(numOfLessons).keys()];\n    return lessonList.map(val => {\n      let lessonNum = val + 1;\n      let classes = currentLessonNum == lessonNum ? \"lesson-item active-lesson\" : \"lesson-item\";\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"lesson\" + String(lessonNum),\n        className: classes,\n        onClick: e => generateLesson(e),\n        children: [\"Lesson \", lessonNum]\n      }, lessonNum, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"option-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"options-title\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"SELECT A LESSON\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 44\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), buildLessonList(14)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n_c = Options;\n\nvar _c;\n\n$RefreshReg$(_c, \"Options\");","map":{"version":3,"sources":["/Users/stevenarellanojr/Desktop/stuff/cs/WebDev/speed-typing/speed-typing/src/components/Options.js"],"names":["Options","lessonState","testToggleState","currentLessonNum","setLessonNum","testToggle","setTestToggle","generateLesson","e","newLessonNum","target","id","split","buildLessonList","numOfLessons","lessonList","Array","keys","map","val","lessonNum","classes","String"],"mappings":";AAAA,OAAO,eAAP;;AAEA,eAAe,SAASA,OAAT,OAAmD;AAAA,MAAlC;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,GAAkC;AAC9D;AACA,MAAI,CAACC,gBAAD,EAAmBC,YAAnB,IAAmCH,WAAvC;AACA,MAAI,CAACI,UAAD,EAAaC,aAAb,IAA8BJ,eAAlC;;AAEA,WAASK,cAAT,CAAwBC,CAAxB,EAA2B;AACvB,QAAIC,YAAY,GAAGD,CAAC,CAACE,MAAF,CAASC,EAAT,CAAYC,KAAZ,CAAkB,GAAlB,EAAuB,CAAvB,CAAnB;;AACA,QAAIH,YAAY,IAAIN,gBAApB,EAAsC;AAClC;AACH;;AACDC,IAAAA,YAAY,CAACK,YAAD,CAAZ;AACH;;AAED,WAASI,eAAT,CAAyBC,YAAzB,EAAuC;AACnC,QAAIC,UAAU,GAAG,CAAC,GAAGC,KAAK,CAACF,YAAD,CAAL,CAAoBG,IAApB,EAAJ,CAAjB;AACA,WAAOF,UAAU,CAACG,GAAX,CAAgBC,GAAD,IAAS;AAC3B,UAAIC,SAAS,GAAGD,GAAG,GAAG,CAAtB;AACA,UAAIE,OAAO,GACPlB,gBAAgB,IAAIiB,SAApB,GACM,2BADN,GAEM,aAHV;AAIA,0BACI;AACI,QAAA,EAAE,EAAE,WAAWE,MAAM,CAACF,SAAD,CADzB;AAEI,QAAA,SAAS,EAAEC,OAFf;AAII,QAAA,OAAO,EAAGb,CAAD,IAAOD,cAAc,CAACC,CAAD,CAJlC;AAAA,8BAMYY,SANZ;AAAA,SAGSA,SAHT;AAAA;AAAA;AAAA;AAAA,cADJ;AAUH,KAhBM,CAAP;AAiBH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,6BAA+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA/B;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKP,eAAe,CAAC,EAAD,CAFpB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;KAxCuBb,O","sourcesContent":["import \"./Options.css\";\n\nexport default function Options({ lessonState, testToggleState }) {\n    // imported states\n    let [currentLessonNum, setLessonNum] = lessonState;\n    let [testToggle, setTestToggle] = testToggleState;\n\n    function generateLesson(e) {\n        let newLessonNum = e.target.id.split(\"n\")[1];\n        if (newLessonNum == currentLessonNum) {\n            return;\n        }\n        setLessonNum(newLessonNum);\n    }\n\n    function buildLessonList(numOfLessons) {\n        let lessonList = [...Array(numOfLessons).keys()];\n        return lessonList.map((val) => {\n            let lessonNum = val + 1;\n            let classes =\n                currentLessonNum == lessonNum\n                    ? \"lesson-item active-lesson\"\n                    : \"lesson-item\";\n            return (\n                <div\n                    id={\"lesson\" + String(lessonNum)}\n                    className={classes}\n                    key={lessonNum}\n                    onClick={(e) => generateLesson(e)}\n                >\n                    Lesson {lessonNum}\n                </div>\n            );\n        });\n    }\n\n    return (\n        <div className=\"option-container\">\n            <div className=\"options-title\"><div>SELECT A LESSON</div></div>\n            {buildLessonList(14)}\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}