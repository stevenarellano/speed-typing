{"ast":null,"code":"var _jsxFileName = \"/Users/stevenarellanojr/Desktop/stuff/cs/WebDev/speed-typing/speed-typing/src/components/TypingArea.js\",\n    _s = $RefreshSig$();\n\nimport \"./TypingArea.css\"; // variables\n\nimport { charBank } from \"../assets/charBank\";\nimport { useState } from \"react\";\nimport { timerKeydown } from \"../assets/typing\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TypingArea(_ref) {\n  _s();\n\n  let {\n    lessonNum\n  } = _ref;\n\n  // creating the text area\n  function rmStringDuplicates(str) {\n    return Array.from(new Set(str)).join(\"\");\n  }\n\n  let chars = charBank[lessonNum];\n\n  function randomInt(min, max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n\n  function cText(chars, numWords) {\n    let lst = [];\n    let i, j, text;\n\n    for (j = 0; j < numWords; j++) {\n      text = \"\";\n\n      for (i = 0; i < randomInt(3, 5); i++) {\n        let upperCase = Math.random() > 0.5 ? 1 : 0;\n        let newChar = chars.charAt(Math.floor(Math.random() * chars.length));\n        text += upperCase ? newChar.toUpperCase() : newChar;\n      }\n\n      lst.push(text);\n    }\n\n    return lst.join(\" \");\n  }\n\n  let text = cText(chars, 40); // tracking typing\n\n  let keyDown = \"\";\n  let [timer, setTimer] = useState({\n    startTime: 0,\n    endTime: 0,\n    timeElapsed: 0\n  });\n  document.addEventListener(\"keydown\", e => {\n    console.log(\"a\");\n    setTimer(timerKeydown(e, timer));\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"typing\",\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 12\n  }, this);\n}\n\n_s(TypingArea, \"VIQrPbJ5TCk2XUCYzZ/6gEo8Gbk=\");\n\n_c = TypingArea;\n\nvar _c;\n\n$RefreshReg$(_c, \"TypingArea\");","map":{"version":3,"sources":["/Users/stevenarellanojr/Desktop/stuff/cs/WebDev/speed-typing/speed-typing/src/components/TypingArea.js"],"names":["charBank","useState","timerKeydown","TypingArea","lessonNum","rmStringDuplicates","str","Array","from","Set","join","chars","randomInt","min","max","Math","floor","random","cText","numWords","lst","i","j","text","upperCase","newChar","charAt","length","toUpperCase","push","keyDown","timer","setTimer","startTime","endTime","timeElapsed","document","addEventListener","e","console","log"],"mappings":";;;AAAA,OAAO,kBAAP,C,CAEA;;AACA,SAASA,QAAT,QAAyB,oBAAzB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,YAAT,QAA6B,kBAA7B;;AAEA,eAAe,SAASC,UAAT,OAAmC;AAAA;;AAAA,MAAf;AAAEC,IAAAA;AAAF,GAAe;;AAC9C;AACA,WAASC,kBAAT,CAA4BC,GAA5B,EAAiC;AAC7B,WAAOC,KAAK,CAACC,IAAN,CAAW,IAAIC,GAAJ,CAAQH,GAAR,CAAX,EAAyBI,IAAzB,CAA8B,EAA9B,CAAP;AACH;;AACD,MAAIC,KAAK,GAAGX,QAAQ,CAACI,SAAD,CAApB;;AACA,WAASQ,SAAT,CAAmBC,GAAnB,EAAwBC,GAAxB,EAA6B;AACzB,WAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBH,GAAG,GAAGD,GAAN,GAAY,CAA7B,CAAX,IAA8CA,GAArD;AACH;;AACD,WAASK,KAAT,CAAeP,KAAf,EAAsBQ,QAAtB,EAAgC;AAC5B,QAAIC,GAAG,GAAG,EAAV;AACA,QAAIC,CAAJ,EAAOC,CAAP,EAAUC,IAAV;;AACA,SAAKD,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGH,QAAhB,EAA0BG,CAAC,EAA3B,EAA+B;AAC3BC,MAAAA,IAAI,GAAG,EAAP;;AACA,WAAKF,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGT,SAAS,CAAC,CAAD,EAAI,CAAJ,CAAzB,EAAiCS,CAAC,EAAlC,EAAsC;AAClC,YAAIG,SAAS,GAAGT,IAAI,CAACE,MAAL,KAAgB,GAAhB,GAAsB,CAAtB,GAA0B,CAA1C;AACA,YAAIQ,OAAO,GAAGd,KAAK,CAACe,MAAN,CACVX,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBN,KAAK,CAACgB,MAAjC,CADU,CAAd;AAIAJ,QAAAA,IAAI,IAAIC,SAAS,GAAGC,OAAO,CAACG,WAAR,EAAH,GAA2BH,OAA5C;AACH;;AACDL,MAAAA,GAAG,CAACS,IAAJ,CAASN,IAAT;AACH;;AAED,WAAOH,GAAG,CAACV,IAAJ,CAAS,GAAT,CAAP;AACH;;AACD,MAAIa,IAAI,GAAGL,KAAK,CAACP,KAAD,EAAQ,EAAR,CAAhB,CA3B8C,CA6B9C;;AACA,MAAImB,OAAO,GAAG,EAAd;AACA,MAAI,CAACC,KAAD,EAAQC,QAAR,IAAoB/B,QAAQ,CAAC;AAC7BgC,IAAAA,SAAS,EAAE,CADkB;AAE7BC,IAAAA,OAAO,EAAE,CAFoB;AAG7BC,IAAAA,WAAW,EAAE;AAHgB,GAAD,CAAhC;AAKAC,EAAAA,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAsCC,CAAD,IAAO;AACxCC,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACAR,IAAAA,QAAQ,CAAC9B,YAAY,CAACoC,CAAD,EAAIP,KAAJ,CAAb,CAAR;AACH,GAHD;AAKA,sBAAO;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,cAAyBR;AAAzB;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;GA1CuBpB,U;;KAAAA,U","sourcesContent":["import \"./TypingArea.css\";\n\n// variables\nimport { charBank } from \"../assets/charBank\";\nimport { useState } from \"react\";\nimport { timerKeydown } from \"../assets/typing\";\n\nexport default function TypingArea({ lessonNum }) {\n    // creating the text area\n    function rmStringDuplicates(str) {\n        return Array.from(new Set(str)).join(\"\");\n    }\n    let chars = charBank[lessonNum];\n    function randomInt(min, max) {\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n    function cText(chars, numWords) {\n        let lst = [];\n        let i, j, text;\n        for (j = 0; j < numWords; j++) {\n            text = \"\";\n            for (i = 0; i < randomInt(3, 5); i++) {\n                let upperCase = Math.random() > 0.5 ? 1 : 0;\n                let newChar = chars.charAt(\n                    Math.floor(Math.random() * chars.length)\n                );\n\n                text += upperCase ? newChar.toUpperCase() : newChar;\n            }\n            lst.push(text);\n        }\n\n        return lst.join(\" \");\n    }\n    let text = cText(chars, 40);\n\n    // tracking typing\n    let keyDown = \"\";\n    let [timer, setTimer] = useState({\n        startTime: 0,\n        endTime: 0,\n        timeElapsed: 0,\n    });\n    document.addEventListener(\"keydown\", (e) => {\n        console.log(\"a\");\n        setTimer(timerKeydown(e, timer));\n    });\n\n    return <div className=\"typing\">{text}</div>;\n}\n"]},"metadata":{},"sourceType":"module"}